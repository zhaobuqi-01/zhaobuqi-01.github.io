<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git学习</title>
    <url>/2020/06/01/git%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;your name&quot;</span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure>

<h1 id="设置ssh-key"><a href="#设置ssh-key" class="headerlink" title="设置ssh key"></a>设置ssh key</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email&quot;</span><br></pre></td></tr></table></figure>

<h1 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h1><p>初始化仓库以后<strong>git</strong> 才可以对目录里的文件进行跟踪</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p><strong>添加文件到仓库</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add &lt;filename&gt;  #添加文件到暂存区</span><br><span class="line">git commit -m &quot;提交描述&quot; #将当前暂存区的文件保存到仓库的历史提交中（就像创建了一个快照，在特定的时期可以将仓库李所有文件回复到一个之前的状态）</span><br></pre></td></tr></table></figure>

<h1 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status #显示Git仓库的状态</span><br></pre></td></tr></table></figure>

<p><strong>查看仓库状态</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch hexo</span><br><span class="line">Your branch is up to date with &#39;origin&#x2F;hexo&#39;.</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line">        &quot;source&#x2F;_posts&#x2F;git\345\255\246\344\271\240.md&quot;</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</span><br><span class="line"># 显示未跟踪的文件有 source&#x2F;_posts&#x2F;git\345\255\246\344\271\240.md ,没有加入暂存区的文件也没有提交的文件</span><br></pre></td></tr></table></figure>

<p><strong>查看修改的内容</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gti diff #查看当前工作树和暂存区</span><br><span class="line">git diff HEAD #查看工作树和最新提交的差别</span><br></pre></td></tr></table></figure>

<p><strong>版本回退</strong> </p>
<ul>
<li>查看提交日志</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log #查看提交日志&#x2F;显示从最近到最远的提交日志   [回退历史版本]</span><br><span class="line">git relog [回退未来的版本]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>git log 的参数</strong> </p>
<p>​    – pretty=short   只显示提交信息的第一行</p>
<p>​    -p    显示文件的改动（查看提交带来的改动）</p>
<p><code>git log &lt;filename&gt;</code>     只显示指定的目录，文件的日志</p>
</blockquote>
<ul>
<li>回溯历史版本</li>
</ul>
<p>在Git用<code>HEAD</code> 表示当前版本，也就是最新的提交，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当往上的版本太多时使用<code>HEAD~数字</code>。 </p>
<p><code>git reset</code> </p>
<p>​    –hard</p>
<h1 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h1><p><code>git checkout --&lt;filename&gt;</code>     把文件在工作区的修改全部撤销，让文件回到最近一次<code>git commit</code>或<code>git add</code> 时的状态。</p>
<p><code>git reset HEAD &lt;file&gt;</code>      撤销暂存区的修改</p>
<p><code>git reset HEAD</code>    既可以回退版本，也可以把暂存区的修改回退到工作区。</p>
<ol>
<li>想修改工作区里的文件    <code>git checkout --file</code></li>
<li>想修改暂存区里文件   <code>git reset HEAD &lt;flie&gt;</code></li>
<li>想撤销本次提交  <code>git reset^</code></li>
</ol>
<h1 id="文件删除与恢复"><a href="#文件删除与恢复" class="headerlink" title="文件删除与恢复"></a>文件删除与恢复</h1><ul>
<li>从版本库里删除文件    先在目录里删除文件<code>rm &lt;file</code>再在版本库里删除对应的文件<code>git rm</code></li>
<li>从版本库里恢复文件    <code>git checkout --&lt;file&gt;</code></li>
</ul>
<p>无论你删除或恢复一个文件以后进行提交，git都会为你保存一个版本，你都可以通过版本回退来找到自己需要的版本。</p>
<h1 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h1><p><code>git remote add origin git@github.com:用户名/仓库名.git</code></p>
<p>origin可以修改，origin是远程仓库的标识符</p>
<h1 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master #-u参数可以在推送的时候，将origin仓库的master分支设置为本地分支当前分支的upstream（上游）。添加了这个参数，将来在 git pull 的时候可以直接从origin的master分支获取最新的内容而不用添加其他参数。</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin &lt;分知名&gt;</span><br></pre></td></tr></table></figure>

<h1 id="获取远程仓库"><a href="#获取远程仓库" class="headerlink" title="获取远程仓库"></a>获取远程仓库</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:用户名&#x2F;仓库名.git</span><br><span class="line">#默认处于远程仓库的默认分支下，同时系统会自动将origin设置为该远程仓库的标识符</span><br></pre></td></tr></table></figure>

<h2 id="获取远程仓库的其他分支"><a href="#获取远程仓库的其他分支" class="headerlink" title="获取远程仓库的其他分支"></a>获取远程仓库的其他分支</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b other origin&#x2F;others</span><br><span class="line"># -b参数后是本地新建分支的名称，新建分支后面的是获取来源的分支名称</span><br><span class="line">git fetch origin other:others</span><br><span class="line"># origin后面的分别是本地分支和远程仓库分支</span><br></pre></td></tr></table></figure>

<p><strong>注意获取其他分支需要与远程仓库相关联</strong> </p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>git学习2</title>
    <url>/2020/09/07/git%E5%AD%A6%E4%B9%A02/</url>
    <content><![CDATA[<h1 id="git命令的补充"><a href="#git命令的补充" class="headerlink" title="git命令的补充"></a>git命令的补充</h1><ol>
<li>git add . <strong>提交全部文件到暂存区</strong></li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>hexo常用指令</title>
    <url>/2020/09/07/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p>*<em>1.hexo n *</em> 新建一篇文章</p>
<p>*<em>2. hexo init *</em> 初始化一个网站</p>
<p>*<em>3. hexo g *</em> 生成静态文件，在发布到GitHub前需要先生成静态文件</p>
<p>*<em>4. hexo s *</em> 启动服务器，可以在本地访问，访问地址为<code>http://localhost:4000/</code></p>
<p>*<em>5. hexo d *</em> 部署网站【发布到GitHub】 </p>
]]></content>
      <categories>
        <category>hexo的使用</category>
      </categories>
  </entry>
  <entry>
    <title>linux_ls</title>
    <url>/2020/06/03/linux-ls/</url>
    <content><![CDATA[<h1 id="ls与pwd"><a href="#ls与pwd" class="headerlink" title="ls与pwd"></a>ls与pwd</h1><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p><strong>pwd</strong>     –显示当前所在的目录</p>
<p>演示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zhaobuqi@zhaobuqi:~$ pwd</span><br><span class="line">/home/zhaobuqi</span><br></pre></td></tr></table></figure>

<blockquote>
<p>名称<br>       pwd - 显示出当前/活动目录的名称</p>
<p>概述<br>       pwd [选项]…</p>
<p>描述<br>       输出当前工作目录的完整名称。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-L, --logical</span><br><span class="line">       使用环境变量中的 PWD，即使其中包含符号链接</span><br><span class="line"></span><br><span class="line">-P, --physical</span><br><span class="line">       避免所有符号链接</span><br><span class="line"></span><br><span class="line">--help 显示此帮助信息并退出</span><br><span class="line"></span><br><span class="line">--version</span><br><span class="line">       显示版本信息并退出</span><br><span class="line"></span><br><span class="line">如果没有指定任何选项，默认使用 -P。</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p><strong>ls</strong>     查看指定目录的内容</p>
<blockquote>
<p>ls [选项] [文件名…]</p>
</blockquote>
<p><strong>常用ls的参数</strong> </p>
<ul>
<li><strong>-l</strong> </li>
</ul>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-l, --format=long, --format=verbose</span><br><span class="line">              除每个文件名外，增加显示文件类型、权限、硬链接数、所  有者名、组</span><br><span class="line">              名、大小（  byte  ）、及时间信息（如未指明是  其它时间即指修改时</span><br><span class="line">              间）。对于6个月以上的文件或超出未来 1 小时的文件，时间信息中的时</span><br><span class="line">              分将被年代取代。</span><br></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhaobuqi@zhaobuqi:~$ ls -l</span><br><span class="line">总用量 76</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 6月   2 20:48  公共的</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 5月  30 18:52  模板</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 6月   2 20:48  视频</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 5月  31 21:45  图片</span><br><span class="line">drwxr-xr-x 4 zhaobuqi zhaobuqi  4096 5月  29 13:29  文档</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 6月   2 21:07  下载</span><br><span class="line">drwxr-xr-x 3 zhaobuqi zhaobuqi  4096 5月  29 12:54  音乐</span><br><span class="line">drwxr-xr-x 2 zhaobuqi zhaobuqi  4096 5月  29 13:18  桌面</span><br><span class="line">drwxrwxr-x 5 zhaobuqi zhaobuqi  4096 5月  29 13:29  baidunetdisk</span><br><span class="line">drwxrwxr-x 3 zhaobuqi zhaobuqi  4096 6月   3 15:03  go</span><br><span class="line">drwxrwxr-x 3 zhaobuqi zhaobuqi  4096 6月   3 15:02  go_code</span><br><span class="line">-rw-r--r-- 1 zhaobuqi zhaobuqi 10013 6月   3 15:40 &#39;- list directory contents&#39;</span><br><span class="line">drwxrwxr-x 4 zhaobuqi zhaobuqi  4096 5月  30 17:58  my_app</span><br><span class="line">drwxr-xr-x 3 zhaobuqi zhaobuqi  4096 5月  28 19:46  snap</span><br><span class="line">-rw-r--r-- 1 zhaobuqi zhaobuqi 10013 6月   3 15:40 &#39;t  information  about  the FILEs (the current directory by default).</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>-a</strong> </li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-a, --all</span><br><span class="line">             列出目录中所有文件，包括以“.”开头的文件。</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zhaobuqi@zhaobuqi:~$ ls -a</span><br><span class="line"> .</span><br><span class="line"> ..</span><br><span class="line"> 公共的</span><br><span class="line"> 模板</span><br><span class="line"> 视频</span><br><span class="line"> 图片</span><br><span class="line"> 文档</span><br><span class="line"> 下载</span><br><span class="line"> 音乐</span><br><span class="line"> 桌面</span><br><span class="line"> .accelerate</span><br><span class="line"> baidunetdisk</span><br><span class="line"> .bash_history</span><br><span class="line"> .bash_logout</span><br><span class="line"> .bashrc</span><br><span class="line"> .cache</span><br><span class="line"> .config</span><br><span class="line"> .dbus</span><br><span class="line"> .deepinwine</span><br><span class="line"> .designer</span><br><span class="line"> .gitconfig</span><br><span class="line"> .gnupg</span><br><span class="line"> go</span><br><span class="line"> go_code</span><br><span class="line"> .kingsoft</span><br><span class="line">'- list directory contents'</span><br><span class="line"> .local</span><br><span class="line"> .mono</span><br><span class="line"> .mozilla</span><br><span class="line"> my_app</span><br><span class="line"> .node_repl_history</span><br><span class="line"> .npm</span><br><span class="line"> .npmrc</span><br><span class="line"> .nv</span><br><span class="line"> .pam_environment</span><br><span class="line"> .pki</span><br><span class="line"> .presage</span><br><span class="line"> .profile</span><br><span class="line"> snap</span><br><span class="line"> .ssh</span><br><span class="line"> .sudo_as_admin_successful</span><br><span class="line">'t  information  about  the FILEs (the current directory by default).'</span><br><span class="line"> .viminfo</span><br><span class="line"> .vscode</span><br><span class="line"> .wine</span><br><span class="line"> .xinputrc</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux-打包与解压缩</title>
    <url>/2020/06/03/linux-%E6%89%93%E5%8C%85%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<h1 id="打包与解压缩"><a href="#打包与解压缩" class="headerlink" title="打包与解压缩"></a>打包与解压缩</h1><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar czf /tmp/etc-backup.tar.gz /etc/</span><br></pre></td></tr></table></figure>

<h2 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xzf /tmp/etc-backup.tar.gz -C /etc/</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux_帮助命令</title>
    <url>/2020/06/03/linux-%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h1><ul>
<li>man</li>
<li>help</li>
<li>info</li>
</ul>
<p>命令用法演示</p>
<p><code>man ls</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NAME</span><br><span class="line">       ls - list directory contents</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       ls [OPTION]... [FILE]...</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       List  information  about  the FILEs (the current directory by default).</span><br><span class="line">       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐</span><br><span class="line">       fied.</span><br><span class="line"></span><br><span class="line">       Mandatory  arguments  to  long  options are mandatory for short options</span><br><span class="line">       too.</span><br><span class="line"></span><br><span class="line">       -a, --all</span><br><span class="line">              do not ignore entries starting with .</span><br><span class="line"></span><br><span class="line">       -A, --almost-all</span><br><span class="line">              do not list implied . and ..</span><br><span class="line"> 省略......</span><br></pre></td></tr></table></figure>

<p><code>help help</code>或 <code>help --help</code></p>
<blockquote>
<p>help [-dms] [模式 …]<br>   显示内建命令的相关信息。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">显示内建命令的简略信息。如果指定了 PATTERN 模式，</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">给出所有匹配 PATTERN 模式的命令的详细帮助，否则打</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">印一个帮助主题列表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">选项：</span></span><br><span class="line"> -d	输出每个主题的简短描述</span><br><span class="line"> -m	以伪 man 手册的格式显示使用方法</span><br><span class="line"> -s	为每一个匹配 PATTERN 模式的主题仅显示一个用法</span><br><span class="line">简介</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">参数：</span></span><br><span class="line"> PATTERN	指定帮助主题的模式</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">退出状态：</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">返回成功，除非未找到 PATTERN 模式没有找到或者使用了无效选项。</span></span><br></pre></td></tr></table></figure>

</blockquote>
<p><code>info ls</code></p>
<blockquote>
<p>ext: dir invocation,  Up: Directory listing</p>
<h1 id="10-1-‘ls’-List-directory-contents"><a href="#10-1-‘ls’-List-directory-contents" class="headerlink" title="10.1 ‘ls’: List directory contents"></a>10.1 ‘ls’: List directory contents</h1><p>The ‘ls’ program lists information about files (of any type, including<br>directories).  Options and file arguments can be intermixed arbitrarily,<br>as usual.</p>
<p>   For non-option command-line arguments that are directories, by<br>default ‘ls’ lists the contents of directories, not recursively, and<br>omitting files with names beginning with ‘.’.  For other non-option<br>arguments, by default ‘ls’ lists just the file name.  If no non-option<br>argument is specified, ‘ls’ operates on the current directory, acting as<br>if it had been invoked with a single argument of ‘.’.</p>
<p>   By default, the output is sorted alphabetically, according to the<br>locale settings in effect.(1)  If standard output is a terminal, the<br>output is in columns (sorted vertically) and control characters are<br>output as question marks; otherwise, the output is listed one per line<br>and control characters are output as-is.</p>
<p>省略…</p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux_目录</title>
    <url>/2020/06/03/linux-%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h1 id="常见目录"><a href="#常见目录" class="headerlink" title="常见目录"></a>常见目录</h1><ul>
<li>/  <strong>根目录</strong></li>
<li>/root  <strong>root的家目录</strong> </li>
<li>/home/username  <strong>普通用户的家目录</strong> </li>
<li>/etc  <strong>配置目录</strong> </li>
<li>/bin  <strong>命令目录</strong> </li>
<li>/sbin  <strong>管理目录</strong> </li>
<li>/usr/bin/usr/sbin  <strong>系统预装的其他命令</strong> </li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ubuntu下ssh的使用</title>
    <url>/2020/06/02/ubuntu%E4%B8%8Bssh%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="安装ssh"><a href="#安装ssh" class="headerlink" title="安装ssh"></a>安装ssh</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install openssh</span><br></pre></td></tr></table></figure>
<h1 id="ssh登录远程服务器"><a href="#ssh登录远程服务器" class="headerlink" title="ssh登录远程服务器"></a>ssh登录远程服务器</h1><blockquote>
<p>ssh -l username  ip</p>
</blockquote>
<blockquote>
<p>ssh username@ip</p>
</blockquote>
<p>输入<strong>exit</strong> 退出连接</p>
<h1 id="ssh上传文件"><a href="#ssh上传文件" class="headerlink" title="ssh上传文件"></a>ssh上传文件</h1><p><code>scp &lt;file&gt; username@ip:dir</code></p>
<h1 id="ssh下载文件"><a href="#ssh下载文件" class="headerlink" title="ssh下载文件"></a>ssh下载文件</h1><p><code>scp usernmae@ip:file dir</code></p>
<h1 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h1><p><code>ssh-keygen</code></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>ubutun安装qq和微信</title>
    <url>/2020/09/06/ubuntu%E5%AE%89%E8%A3%85qq%E5%92%8C%E5%BE%AE%E4%BF%A1/</url>
    <content><![CDATA[<h2 id="1-安装deepin"><a href="#1-安装deepin" class="headerlink" title="1.安装deepin"></a>1.安装deepin</h2><p><strong>1.使用git将deepin克隆到本地</strong></p>
<blockquote>
<p>git  clone  <a href="https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu" target="_blank" rel="noopener">https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu</a></p>
</blockquote>
<p><strong>2.进入克隆到本地的deepin文件夹</strong></p>
<blockquote>
<p>cd  deepin-wine-for-ubuntu</p>
</blockquote>
<p><strong>3.安装</strong> </p>
<blockquote>
<p>./install.sh</p>
</blockquote>
<h2 id="2-安装qq-微信"><a href="#2-安装qq-微信" class="headerlink" title="2.安装qq,微信"></a>2.安装qq,微信</h2><blockquote>
<p>wget -qO- <a href="https://deepin-wine.i-m.dev/setup.sh" target="_blank" rel="noopener">https://deepin-wine.i-m.dev/setup.sh</a> | sudo sh</p>
<p><code>#安装qq</code></p>
<p>sudo apt-get install deepin.com.wechat</p>
<p><code>#安装微信</code> </p>
<p>sudo apt-get install deepin.com.qq.im</p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu安装百度输入法</title>
    <url>/2020/06/02/ubuntu%E5%AE%89%E8%A3%85%E7%99%BE%E5%BA%A6%E8%BE%93%E5%85%A5%E6%B3%95/</url>
    <content><![CDATA[<h1 id="解决依赖"><a href="#解决依赖" class="headerlink" title="解决依赖"></a>解决依赖</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 通过命令行安装 aptitude</span><br><span class="line">sudo apt-get install aptitude -y</span><br></pre></td></tr></table></figure>
<p>使用aptitude解决安装依赖的问题</p>
<h1 id="安装fcitx"><a href="#安装fcitx" class="headerlink" title="安装fcitx"></a>安装fcitx</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 通过命令行利用 aptitude 安装 fcitx 和 qt 等</span><br><span class="line">sudo aptitude install fcitx-bin fcitx-table fcitx-config-gtk fcitx-config-gtk2 fcitx-frontend-all</span><br></pre></td></tr></table></figure>

<h1 id="安装qt5"><a href="#安装qt5" class="headerlink" title="安装qt5"></a>安装qt5</h1><p><strong>注意：不安装qt5,百度输入法无法正常使用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo aptitude install qt5-default qtcreator qml-module-qtquick-controls2</span><br></pre></td></tr></table></figure>

<h1 id="安装百度输入法"><a href="#安装百度输入法" class="headerlink" title="安装百度输入法"></a>安装百度输入法</h1><p>到官网下载百度输入法的压宿包，然后解压，在解压的目录执行以下命令</p>
<p><code>sudo dpkg –i fcitx-baidupinyin.deb</code></p>
<p><strong>注意安装完重启即可，重启以后按照提示进行</strong></p>
<p><a href="https://srf.baidu.com/site/guanwang_linux/index.html" target="_blank" rel="noopener">百度输入法下载</a></p>
<h1 id="卸载百度输入法"><a href="#卸载百度输入法" class="headerlink" title="卸载百度输入法"></a>卸载百度输入法</h1><p><code>sudo dpkg --purge remove fcitx-baidupinyin:amd64</code> </p>
]]></content>
  </entry>
  <entry>
    <title>ubuntu安装typora</title>
    <url>/2020/05/31/ubuntu%E5%AE%89%E8%A3%85typora/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># or run:</span><br><span class="line"># sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class="line">wget -qO - https:&#x2F;&#x2F;typora.io&#x2F;linux&#x2F;public-key.asc | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"># add Typora&#39;s repository</span><br><span class="line">sudo add-apt-repository &#39;deb https:&#x2F;&#x2F;typora.io&#x2F;linux .&#x2F;&#39;</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"># install typora</span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在ubutun20.04下搭建hexo环境</title>
    <url>/2020/05/28/ubuntu%E6%90%AD%E5%BB%BAhexo/</url>
    <content><![CDATA[<h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p><code>sudo apt install nodejs</code></p>
<h2 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h2><p><code>sudo apt install npm</code></p>
<h2 id="改用taobao的npm源"><a href="#改用taobao的npm源" class="headerlink" title="改用taobao的npm源"></a>改用taobao的npm源</h2><p><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code> </p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p><code>cnpm install hexo-cli -g</code>  #-g 表示全局安装</p>
<p><strong>注意：必须在root模式下安装</strong> </p>
]]></content>
      <categories>
        <category>hexo的使用</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>npm</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>系统的备份与还原</title>
    <url>/2020/06/03/%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar cvpzf centos7.tgz --exclude=/centos7.tgz --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media /</span><br></pre></td></tr></table></figure>

<h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xvpfz centos7.tgz -C /</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>本地分支推送到远程分支</title>
    <url>/2020/05/28/%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<h2 id="1-有远程分支remote-branch-有本地分支local-branch-本地分支与远程分支关联-已经切换到本地分支"><a href="#1-有远程分支remote-branch-有本地分支local-branch-本地分支与远程分支关联-已经切换到本地分支" class="headerlink" title="1.有远程分支remote_branch,有本地分支local_branch,本地分支与远程分支关联,已经切换到本地分支"></a>1.有远程分支remote_branch,有本地分支local_branch,本地分支与远程分支关联,已经切换到本地分支</h2><blockquote>
<p>git push</p>
</blockquote>
<h2 id="2-有远程分支remote-branch-有本地分支local-branch-本地分支与远程分支不关联-已经切换到本地分支"><a href="#2-有远程分支remote-branch-有本地分支local-branch-本地分支与远程分支不关联-已经切换到本地分支" class="headerlink" title="2.有远程分支remote_branch,有本地分支local_branch,本地分支与远程分支不关联,已经切换到本地分支"></a>2.有远程分支remote_branch,有本地分支local_branch,本地分支与远程分支不关联,已经切换到本地分支</h2><blockquote>
<p>git push -u origin/remote_branch</p>
</blockquote>
<h2 id="3-没有远程分支remote-branch-有本地分支local-branch-已经切换到本地分支"><a href="#3-没有远程分支remote-branch-有本地分支local-branch-已经切换到本地分支" class="headerlink" title="3.没有远程分支remote_branch,有本地分支local_branch,已经切换到本地分支"></a>3.没有远程分支remote_branch,有本地分支local_branch,已经切换到本地分支</h2><blockquote>
<p>git push origin local_branch :remote_branch</p>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git push</tag>
      </tags>
  </entry>
  <entry>
    <title>dos的常用命令介绍</title>
    <url>/2020/09/12/dos%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="dos的常用命令介绍"><a href="#dos的常用命令介绍" class="headerlink" title="dos的常用命令介绍"></a>dos的常用命令介绍</h2><ol>
<li>查看当前目录是什么 </li>
</ol>
<p><strong>dir</strong> </p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">demo</span>&gt;<span class="title">dir</span></span></span><br><span class="line"><span class="function"> 驱动器 <span class="title">D</span> 中的卷是 <span class="title">Data</span></span></span><br><span class="line"><span class="function"> 卷的序列号是 543<span class="title">D</span>-<span class="title">EB9C</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="title">D</span>:\<span class="title">demo</span> 的目录</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2020/09/12  19:35    &lt;<span class="title">DIR</span>&gt;          .</span></span><br><span class="line"><span class="function">2020/09/12  19:35    &lt;<span class="title">DIR</span>&gt;          ..</span></span><br><span class="line"><span class="function">2020/09/12  19:35         2,141,184 <span class="title">myhello.exe</span></span></span><br><span class="line"><span class="function">2020/09/11  20:11         2,141,184 <span class="title">test.exe</span></span></span><br><span class="line"><span class="function">2020/09/11  20:09                91 <span class="title">test.go</span></span></span><br><span class="line"><span class="function">               3 个文件      4,282,459 字节</span></span><br><span class="line"><span class="function">               2 个目录 392,539,840,512 可用字节</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>切换到其他盘符</li>
</ol>
<p><strong>cd /d f:</strong> </p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">demo</span>&gt;<span class="title">cd</span> /<span class="title">d</span> <span class="title">e</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>切换目录</li>
</ol>
<p><strong>cd d:\demo</strong> </p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">E:\&gt;<span class="title">cd</span> <span class="title">e</span>:\<span class="title">Doweload</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">e</span>:\<span class="title">Doweload</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>切换到根目录</li>
</ol>
<p>*<em>cd \ *</em> </p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">e:\<span class="title">Doweload</span>&gt;<span class="title">cd</span> \</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">e</span>:\&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>新建目录</li>
</ol>
<p><strong>md</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:\&gt;md test</span><br><span class="line"></span><br><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  21:13    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:13    &lt;DIR&gt;          test</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               0 个文件              0 字节</span><br><span class="line">               6 个目录 983,124,643,840 可用字节</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>删除目录</li>
</ol>
<p><strong>rd</strong></p>
<p>rd /q 不询问</p>
<p>rd /s 当目录里有文件时使用这个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  21:13    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:13    &lt;DIR&gt;          test</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               0 个文件              0 字节</span><br><span class="line">               6 个目录 983,124,643,840 可用字节</span><br><span class="line"></span><br><span class="line">e:\&gt;rd test</span><br><span class="line"></span><br><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  21:13    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               0 个文件              0 字节</span><br><span class="line">               5 个目录 983,124,643,840 可用字节</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>echo指令</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:\&gt;echo hello &gt; Doweload\test.txt</span><br><span class="line"></span><br><span class="line">e:\&gt;dir Doweload</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\Doweload 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          .</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          ..</span><br><span class="line">2020&#x2F;09&#x2F;11  13:21       113,897,472 boinc_7.16.11_windows_x86_64_vbox.exe</span><br><span class="line">2020&#x2F;09&#x2F;11  13:23    &lt;DIR&gt;          briblo_103</span><br><span class="line">2020&#x2F;09&#x2F;11  13:18         3,807,157 briblo_103.zip</span><br><span class="line">2020&#x2F;09&#x2F;12  19:12         1,550,147 C 学习笔记.pdf</span><br><span class="line">2020&#x2F;09&#x2F;11  13:16    &lt;DIR&gt;          fliqlo_133</span><br><span class="line">2020&#x2F;09&#x2F;11  13:16         3,804,811 fliqlo_133.zip</span><br><span class="line">2020&#x2F;09&#x2F;12  19:14         1,014,280 Go 1.5 源码剖析 （书签版）.pdf</span><br><span class="line">2020&#x2F;09&#x2F;12  19:12         1,365,184 Go 学习笔记 第四版.pdf</span><br><span class="line">2020&#x2F;09&#x2F;11  13:17         4,339,940 Hubble3D_PCScreensaver.exe</span><br><span class="line">2020&#x2F;09&#x2F;12  21:13    &lt;DIR&gt;          MLofAndrew-Ng-master</span><br><span class="line">2020&#x2F;09&#x2F;11  13:52        36,728,520 Qv2ray.v2.6.3.linux-x64 (1).AppImage</span><br><span class="line">2020&#x2F;09&#x2F;11  13:51        36,728,520 Qv2ray.v2.6.3.linux-x64.AppImage</span><br><span class="line">2020&#x2F;09&#x2F;10  19:23    &lt;DIR&gt;          TeamViewerPortable</span><br><span class="line">2020&#x2F;09&#x2F;10  19:22        27,316,451 TeamViewerPortable.rar</span><br><span class="line">2020&#x2F;09&#x2F;10  19:21        28,032,224 TeamViewer_Setup.exe</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 test.txt</span><br><span class="line">2020&#x2F;09&#x2F;11  00:22       579,181,704 VMware-workstation-full-15.5.6-16341506.exe</span><br><span class="line">2020&#x2F;09&#x2F;11  00:18             1,617 vmwarepro_16025.zip</span><br><span class="line">2020&#x2F;09&#x2F;12  19:12           235,516 下载.png</span><br><span class="line">              15 个文件    838,003,551 字节</span><br><span class="line">               6 个目录 983,124,643,840 可用字节</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>复制文件</li>
</ol>
<p><strong>copy</strong>  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:\&gt;copy Doweload\test.txt e\</span><br><span class="line">系统找不到指定的路径。</span><br><span class="line">已复制         0 个文件。</span><br><span class="line"></span><br><span class="line">e:\&gt;copy Doweload\test.txt e:\</span><br><span class="line">已复制         1 个文件。</span><br><span class="line"></span><br><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 test.txt</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               1 个文件              8 字节</span><br><span class="line">               5 个目录 983,124,643,840 可用字节</span><br><span class="line"></span><br><span class="line">e:\&gt;copy Doweload\test.txt e:\hello.txt</span><br><span class="line">已复制         1 个文件。</span><br><span class="line"></span><br><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 hello.txt</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 test.txt</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               2 个文件             16 字节</span><br><span class="line">               5 个目录 983,124,643,840 可用字节</span><br></pre></td></tr></table></figure>



<ol start="9">
<li>删除文件</li>
</ol>
<p><strong>del</strong> 文件名</p>
<p>del * 删除全部文件</p>
<p>del *.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 hello.txt</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 test.txt</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               2 个文件             16 字节</span><br><span class="line">               5 个目录 983,124,643,840 可用字节</span><br><span class="line"></span><br><span class="line">e:\&gt;del test.txt</span><br><span class="line"></span><br><span class="line">e:\&gt;dir</span><br><span class="line"> 驱动器 E 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 30EC-F122</span><br><span class="line"></span><br><span class="line"> e:\ 的目录</span><br><span class="line"></span><br><span class="line">2020&#x2F;09&#x2F;10  18:53    &lt;DIR&gt;          dingchunhui</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21    &lt;DIR&gt;          Doweload</span><br><span class="line">2020&#x2F;09&#x2F;12  22:21                 8 hello.txt</span><br><span class="line">2020&#x2F;09&#x2F;11  19:53    &lt;DIR&gt;          ubutun20.04</span><br><span class="line">2020&#x2F;09&#x2F;11  00:23    &lt;DIR&gt;          VM</span><br><span class="line">2020&#x2F;09&#x2F;11  00:35    &lt;DIR&gt;          新建文件夹</span><br><span class="line">               1 个文件              8 字节</span><br><span class="line">               5 个目录 983,124,643,840 可用字节</span><br></pre></td></tr></table></figure>

<ol start="10">
<li>清屏</li>
</ol>
<p><strong>cls</strong> </p>
<ol start="11">
<li>推出dos</li>
</ol>
<p><strong>exit</strong> </p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>入门</title>
    <url>/2020/09/08/go%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"><span class="comment">//main 包比较特殊。它定义了一个独立可执行的程序，而不是一个库</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//一个函数的声明由 func 关键字、函数名、参数列表、返回值列表以及包含在大括号里的函数体组成</span></span><br><span class="line">    fmt.Println(<span class="string">"hello,世界"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>go run test.go</code></p>
<p>Hello,world.你好，世界！</p>
</blockquote>
<p>Go语言的代码通过包（package）组织，包类似于其他语言里的库（libraies）或者模块（modules）.</p>
<p>一个包位于单个目录下的一个或多个.go源代码文件组成，目录定义报的作用。</p>
<p><strong>每个源代码都以一条<code>package</code> 声明语句开始</strong> ，这个例子里就是<code>package main</code> ,<strong>表示该文件属于哪个包</strong> ，紧跟着一系列导入（import)的包，之后是存储在这个文件里的程序语句。</p>
<p><strong><em>必须告诉编译器源文件需要哪些包，这就是跟随在<code>package</code> 声明后面的<code>import</code> 声明扮演的角色。</em></strong> </p>
<p><em>必须恰当需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。</em></p>
<p><strong><code>import</code> 声明必须跟在文件的<code>package</code> 声明之后。</strong>随后，则是组成程序的函数，变量，常量，类型的声明语句。这些内容的声明顺序并不重要。</p>
<p><strong>Go语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句</strong> </p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>盛最多的水</title>
    <url>/2020/09/13/%E7%9B%9B%E6%9C%80%E5%A4%9A%E7%9A%84%E6%B0%B4/</url>
    <content><![CDATA[<h1 id="盛最多的水"><a href="#盛最多的水" class="headerlink" title="盛最多的水"></a>盛最多的水</h1><p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>
<p>说明：你不能倾斜容器，且 n 的值至少为 2。</p>
<p><img src="https://i.loli.net/2020/09/13/l3MxI8BrwHhGNzj.png" alt="image.png"></p>
<p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p>
<p>示例：</p>
<blockquote>
<p>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49</p>
</blockquote>
<p>代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="keyword">int</span>* <span class="built_in">height</span>, <span class="keyword">int</span> heightSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> head=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> last=heightSize<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> maxArea=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tempArea=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(head&lt;last)&#123;</span><br><span class="line">        tempArea=<span class="built_in">min</span>(<span class="built_in">height</span>[head],<span class="built_in">height</span>[last])*(last-head);</span><br><span class="line">        maxArea=<span class="built_in">max</span>(tempArea,maxArea);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">height</span>[last]&gt;=<span class="built_in">height</span>[head])&#123;</span><br><span class="line">            head++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            last--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxArea;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> head,<span class="keyword">int</span> last)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head&gt;=last)</span><br><span class="line">        <span class="keyword">return</span> last;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">&#125;<span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> head,<span class="keyword">int</span> last)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head&gt;=last)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
      </categories>
  </entry>
  <entry>
    <title>修改路由器wife账号密码</title>
    <url>/2020/09/13/%E4%BF%AE%E6%94%B9%E8%B7%AF%E7%94%B1%E5%99%A8wife%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="修改wife账号密码"><a href="#修改wife账号密码" class="headerlink" title="修改wife账号密码"></a>修改wife账号密码</h1><p><strong>修改流程</strong> </p>
<ol>
<li><p>连接</p>
<ol>
<li>用网线将电脑与路由器lan口连接</li>
<li>或者电脑连上路由器的wife</li>
</ol>
</li>
<li><p>进入路由器后台1922.168.2.1或者192.168.1.1</p>
</li>
</ol>
<p>在网页输入192.168.1.1或者192.168.2.1即可，登录默认密码为admin</p>
<p><img src="https://i.loli.net/2020/09/13/rdiRTgvj2of75zI.png" alt="image.png"> </p>
<p><img src="https://i.loli.net/2020/09/13/Od9FIZcDlVqmawt.png" alt="image.png"> </p>
<ol start="3">
<li><p>输入密码登录，默认密码为admin</p>
</li>
<li><p>点击左边的网络–无线或者无线设置</p>
<p>1.网络–无线</p>
<p><img src="https://i.loli.net/2020/09/13/dCWpL9FasuXDtr3.png" alt="image.png"> </p>
<p>点击修改（下面的5G同理）</p>
<p>在基础设置里<strong>ESSID填写wife名称</strong> </p>
<p>在无线安全里<strong>加密选择WPA@-P5X</strong>   *<em>算法自动  密码自行设置 *</em> </p>
<p><strong><em>然后保存应用</em></strong> </p>
<ol start="2">
<li><p>无线设置</p>
<p>傻瓜式操作</p>
</li>
</ol>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>西邮学号宽带绑定</title>
    <url>/2020/09/13/%E8%A5%BF%E9%82%AE%E5%AD%A6%E5%8F%B7%E5%AE%BD%E5%B8%A6%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<h1 id="绑定教程"><a href="#绑定教程" class="headerlink" title="绑定教程"></a>绑定教程</h1><p><strong>绑定流程</strong> </p>
<ol>
<li>自助服务系统绑定账号</li>
<li>安装上网客户端</li>
<li>使用学号密码登录网络确定绑定成功</li>
</ol>
<h2 id="一-绑定自助系统"><a href="#一-绑定自助系统" class="headerlink" title="一.绑定自助系统"></a>一.绑定自助系统</h2><ol>
<li>插上网线，使用浏览器打开任意网页，会自动跳转到通知页面：</li>
</ol>
<p><img src="https://i.loli.net/2020/09/13/h3rTtnN6OGImQ8H.png" alt="image.png"></p>
<ol start="2">
<li><p>点右侧的用户自助服务系统，打开校园网自助系统</p>
</li>
<li><p>在登录页面输入学号和对应的校园网密码（默认学号后6位），登录成功在服务，绑定运营商账号密码</p>
</li>
<li><p>在通知页面下载上网客户端</p>
</li>
<li><p>在客户端使用学号和一卡通充值密码登录（默认为学号后6位），如果有网证明绑定成功</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Go变量</title>
    <url>/2020/09/15/Go%E5%8F%98%E9%87%8F-1/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Go变量</title>
    <url>/2020/09/14/Go%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Go命名</title>
    <url>/2020/09/15/Go%E5%91%BD%E5%90%8D/</url>
    <content><![CDATA[<h1 id="2-1命名"><a href="#2-1命名" class="headerlink" title="2.1命名"></a>2.1命名</h1><p><strong>命名规则：</strong></p>
<p>一个名字必须以一个字母（Unicode字母）或下划线开头，后面可以跟任意数量的字母、数字或下划线。</p>
<p><strong>注意事项：</strong> </p>
<ol>
<li><p>大写字母和小写字母是不同的：heapSort和Heapsort是两个不同的名字</p>
</li>
<li><p>关键字不能用于自定义名字，只能在特定语法结构中使用。</p>
</li>
</ol>
<p><strong>关键字</strong> </p>
<blockquote>
<p>break        default         func         interface         select<br>case          defer             go              map                struct<br>chan         else                 goto         package         switch<br>const         fallthrough     if             range             type<br>continue     for                 import     return          var</p>
</blockquote>
<p><strong>预定义的名字</strong> ，主要对应内建的常量，类型和函数</p>
<p>这些预定义的名字并不是关键字，你可以在定义中重新使用它们。在一些特殊的场景中重新定义它们也是有意义的，但是也要注意避免过度而引起语义混乱。</p>
<blockquote>
<p>内建常量:     true     false     iota     nil<br>内建类型: int     int8     int16     int32     int64<br>               uint     uint8 uint16     uint32 uint64     uintptr<br>               float32     float64     complex128     complex64<br>               bool     byte     rune     string     error<br>内建函数:     make     len     cap     new     append     copy     close     delete<br>                   complex     real     imag<br>                   panic     recover</p>
</blockquote>
<ol start="3">
<li><p>如果它的就一个名字在函数内部定义，那么它的就只在函数内部有效。如果在函数外部定义，那么将在当前包的所有文件中都可以访问。</p>
</li>
<li><p><strong>名字的开头字母的大小写决定了名字在包外的可见性。包本身的名字一般总是用消息字母</strong> 如果一个名字是大写字母开头的(注：必须是在函数外部定义的包级名字；包级函数名本身也是包级名字)，那么他将是导出的，也就是可以被外部的包访问，<strong>例如 fmt 包的Printf就是导出的，可以在fmt包外部访问</strong> </p>
</li>
<li><p><strong>名字的长度没有逻辑限制</strong> ，但是Go语言的风格是尽量使用短小的名字，对于局部变量尤其是<br>这样；你会经常看到i之类的短名字，而不是冗长的theLoopIndex命名。通常来说，如果一个<br>名字的作用域比较大，生命周期也比较长，那么用长的名字将会更有意义。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>Go语法规范</title>
    <url>/2020/09/15/Go%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li>必须告诉编译器源文件需要哪些包。</li>
<li>必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。</li>
<li><code>import</code> 声明必须跟在文件的<code>package</code> 声明之后。随后，则是组成程序的函数，变量，常量，类型的声明语句（分别由<code>func</code>,<code>var</code>,<code>const</code>,<code>type</code>定义）。这些内容的声明顺序并不重要。</li>
<li>Go语言不需要在语句或声明的末尾添加分号。</li>
<li>函数的左括号 <code>{</code> 必须和 <code>func</code>  函数声明在同一行上,且位于末尾，不能独占一行。</li>
</ul>
<h1 id="Go的注释"><a href="#Go的注释" class="headerlink" title="Go的注释"></a>Go的注释</h1><p><strong>行注释：</strong> // 【Go语言规范尽量使用行注释而不是块注释】</p>
<p><strong>块注释:</strong>  </p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 注释内容*/</span></span><br><span class="line">在<span class="comment">/* */</span>不能再添加<span class="comment">/**/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>ubutun修改root用户密码</title>
    <url>/2020/09/15/ubutun%E4%BF%AE%E6%94%B9root%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zhaobuqi@zhaobuqi:~$ sudo passwd </span><br><span class="line">新的 密码： </span><br><span class="line">重新输入新的 密码： </span><br><span class="line">passwd：已成功更新密码</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Go声明</title>
    <url>/2020/09/15/Go%E5%A3%B0%E6%98%8E/</url>
    <content><![CDATA[<h1 id="2-2声明"><a href="#2-2声明" class="headerlink" title="2.2声明"></a>2.2声明</h1><p>  <strong>声明语句定义了程序的各种实体对象以及部分或全部的属性</strong> </p>
<p>Go语言主要有四种类型的声明语句：<strong>var</strong> ，<strong>const</strong> ，<strong>type</strong> 和<strong>func</strong> ，分别对应变量，常量，类型和函数实体对象的声明。</p>
<p>一个Go语言编写的程序对应一个或多个以.go为文件后缀名的源文件中。每个源文件以包的声<br>明语句开始，说明该源文件是属于哪个包。包声明语句之后是import语句导入依赖的其它包，<br>然后是包一级的类型、变量、常量、函数的声明语句，包一级的各种类型的声明语句的顺序<br>无关紧要（译注：函数内部的名字则必须先声明之后才能使用）。</p>
<p><strong>一个函数的声明由一个函数名字、参数列表（由函数的调用者提供参数变量的具体值）、一<br>个可选的返回值列表和包含函数定义的函数体组成。</strong> 如果函数没有返回值，那么返回值列表<br>是省略的。执行函数从函数的第一个语句开始，依次顺序执行直到遇到return返回语句，如果<br>没有返回语句则是执行到函数末尾，然后返回到函数调用者。</p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>无重复字符的最长字符</title>
    <url>/2020/09/15/%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<p>给定一个字符串，请你找出其中不含有重复字符的<strong>最长子串</strong> 的长度。</p>
<p>示例 1:</p>
<blockquote>
<p>输入: “abcabcbb”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</p>
</blockquote>
<p>示例 2:</p>
<blockquote>
<p>输入: “bbbbb”<br>输出: 1<br>解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</p>
</blockquote>
<p>示例 3:</p>
<blockquote>
<p>输入: “pwwkew”</p>
<p>输出: 3</p>
<p>解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>     请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="keyword">char</span> * s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> last_exist[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">char</span>* p = s;</span><br><span class="line">        <span class="keyword">int</span> max_len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> offset = <span class="number">0</span>;<span class="comment">//重置长度</span></span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">1</span>;<span class="comment">//第几个出现</span></span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(*s == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">256</span>; ++i)&#123;</span><br><span class="line">            last_exist[i] = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(*p)&#123;</span><br><span class="line">            <span class="keyword">if</span>(last_exist[*p] &gt;= <span class="number">0</span> &amp;&amp; offset &lt; last_exist[*p])&#123;</span><br><span class="line">                offset = last_exist[*p];</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">            len = idx - offset;</span><br><span class="line">            max_len = len &gt; max_len?len:max_len;</span><br><span class="line">            last_exist[*p] = idx;</span><br><span class="line">            ++p;</span><br><span class="line">            ++idx;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max_len;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
      </categories>
  </entry>
</search>
